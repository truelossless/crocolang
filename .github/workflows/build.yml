name: build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:

  # build croco on every OS
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - uses: actions/checkout@v2
    
    - name: Build release
      run: cargo build --release
    
    # save the file
    - uses: actions/upload-artifact@v2
      if: ${{ matrix.os != 'windows-latest' }}
      with:
        name: croco-${{ matrix.os }}
        path: ./target/release/croco

    # on windows the executable is ending with a .exe
    - uses: actions/upload-artifact@v2
      if: ${{ matrix.os == 'windows-latest' }}
      with:
        name: croco-${{ matrix.os }}
        path: ./target/release/croco.exe
  
  # upload the resulting binaries to github releases
  upload:
    needs: build
    runs-on: ubuntu-latest
    steps:

      # retreive the previously saved binaries
      - uses: actions/download-artifact@v2
        with:
          name: croco-ubuntu-latest
          path: linux

      - uses: actions/download-artifact@v2
        with:
          name: croco-windows-latest
          path: windows

      - uses: actions/download-artifact@v2
        with:
          name: croco-macos-latest
          path: macos

      # get the commit hash
      # https://github.community/t/add-short-sha-to-github-context/16418/11
      - name: get commit infos
        id: commit
        run: echo "::set-output name=hash::$(echo ${GITHUB_SHA} | cut -c1-8)"
        # echo "::set-output name=msg::$(git log --format=%B -n 1 ${{ github.event.after }})"

      - name: create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.commit.outputs.hash }}
          release_name: Release ${{ steps.commit.outputs.hash }}
          body: This is an automated build for commit ${{ steps.commit.outputs.hash }}.
          draft: false
          prerelease: true
      
      - name: upload Linux binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./linux/croco
          asset_name: croco-linux-${{ steps.commit.outputs.hash }}
          asset_content_type: application/x-elf

      - name: upload Windows binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./windows/croco.exe
          asset_name: croco-windows-${{ steps.commit.outputs.hash }}.exe
          asset_content_type: application/x-msdownload
      
      - name: upload MacOS binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./macos/croco
          asset_name: croco-macos-${{ steps.commit.outputs.hash }}
          asset_content_type: application/x-elf
